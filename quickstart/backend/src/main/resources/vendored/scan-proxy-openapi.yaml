openapi: 3.0.0
info:
  title: Validator API
  version: 0.0.1
tags:
  - name: validator
servers:
  - url: https://example.com/api/validator
paths:
  /v0/scan-proxy/dso-party-id:
    get:
      tags: [ scan-proxy ]
      x-jvm-package: scanproxy
      operationId: "getDsoPartyId"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetDsoPartyIdResponse"
  /v0/scan-proxy/open-and-issuing-mining-rounds:
    get:
      tags: [ scan-proxy ]
      x-jvm-package: scanproxy
      operationId: "getOpenAndIssuingMiningRounds"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetOpenAndIssuingMiningRoundsProxyResponse"
  /v0/scan-proxy/amulet-rules:
    get:
      tags: [ scan-proxy ]
      x-jvm-package: scanproxy
      operationId: "getAmuletRules"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetAmuletRulesProxyResponse"

components:
  schemas:
    GetDsoPartyIdResponse:
      type: object
      required: ["dso_party_id"]
      properties:
        dso_party_id:
          type: string
    GetOpenAndIssuingMiningRoundsProxyResponse:
      type: object
      required:
        [
          "open_mining_rounds",
          "issuing_mining_rounds",
        ]
      properties:
        open_mining_rounds:
          type: array
          items:
            $ref: "#/components/schemas/ContractWithState"
        issuing_mining_rounds:
          type: array
          items:
            $ref: "#/components/schemas/ContractWithState"
    GetAmuletRulesProxyResponse:
      type: object
      required:
        [
          "amulet_rules",
        ]
      properties:
        amulet_rules:
          "$ref": "#/components/schemas/ContractWithState"
          
    ContractWithState:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/Contract"
        domain_id:
          type: string
      required:
        [ "contract" ]
    AssignedContract:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/Contract"
        domain_id:
          type: string
      required:
        - contract
    Contract:
      type: object
      properties:
        template_id:
          type: string
        contract_id:
          type: string
        payload:
          type: object
          properties:
            round:
              type: object
              properties:
                number:
                  type: string
              required:
                - number
        created_event_blob:
          type: string
        created_at:
          type: string
      required:
        [
          "template_id",
          "contract_id",
          "payload",
          "created_event_blob",
          "created_at"
        ]